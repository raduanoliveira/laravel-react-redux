{"version":3,"file":"react-picky.esm.js","sources":["../src/lib/debounce.ts","../src/lib/includes.ts","../src/lib/utils.ts","../src/lib/format.ts","../src/Placeholder.tsx","../src/Filter.tsx","../src/Option.tsx","../src/SelectAll.tsx","../src/Button.tsx","../src/Picky.tsx"],"sourcesContent":["export const debounce = (fn: Function, delay: number) => {\n  let timeoutID: NodeJS.Timer | null = null;\n  return function(...args: any[]) {\n    if (timeoutID) {\n      clearTimeout(timeoutID);\n    }\n    //@ts-ignore\n    const that: any = this as any;\n    timeoutID = setTimeout(() => {\n      fn.apply(that, args);\n    }, delay);\n  };\n};\n","/**\n * Check if a string contains a value\n */\nexport function includes(\n  str: string,\n  term: string,\n  caseSensitive: boolean = false\n): boolean {\n  if (!caseSensitive) {\n    return (\n      String(str)\n        .toLowerCase()\n        .indexOf(String(term).toLowerCase()) > -1\n    );\n  } else {\n    return String(str).indexOf(String(term)) > -1;\n  }\n}\n","import { OptionsType, OptionType, ComplexOptionType } from 'types';\n\nexport const isDataObject = (\n  obj: OptionType | undefined,\n  valueKey: string | undefined,\n  labelKey: string | undefined\n): boolean => {\n  if (typeof labelKey === 'undefined' || typeof valueKey === 'undefined') {\n    return false;\n  }\n  return (\n    typeof obj === 'object' &&\n    obj.hasOwnProperty(valueKey) &&\n    obj.hasOwnProperty(labelKey)\n  );\n};\n\nexport const hasItem = (\n  all: OptionsType | OptionType | undefined,\n  item: OptionType,\n  valueKey?: string,\n  labelKey?: string,\n  returnIndex: boolean = false\n) => {\n  if (!all || !item) return false;\n  if (Array.isArray(all)) {\n    if (isDataObject(item, valueKey, labelKey)) {\n      const find = all.findIndex(\n        opt =>\n          (opt as ComplexOptionType)[valueKey!] ===\n          (item as ComplexOptionType)[valueKey!]\n      );\n      if (returnIndex) {\n        return find;\n      }\n      return find > -1;\n    } else {\n      const indexOfItem = all.indexOf(item);\n      if (returnIndex) {\n        return indexOfItem;\n      }\n      return indexOfItem > -1;\n    }\n  } else {\n    if (isDataObject(item, valueKey, labelKey)) {\n      return (\n        (all as ComplexOptionType)[valueKey!] ===\n        (item as ComplexOptionType)[valueKey!]\n      );\n    }\n    return all === item;\n  }\n};\n\nexport const hasItemIndex = (\n  all: OptionsType | OptionType,\n  item: OptionType,\n  valueKey?: string,\n  labelKey?: string\n): number => hasItem(all, item, valueKey, labelKey, true) as number;\n\nexport const keyExtractor = (\n  item: OptionType,\n  valueKey?: string,\n  labelKey?: string\n) =>\n  isDataObject(item, valueKey, labelKey)\n    ? (item as ComplexOptionType)[valueKey!]\n    : item;\nexport const labelExtractor = (\n  item: OptionType,\n  valueKey?: string,\n  labelKey?: string\n) =>\n  isDataObject(item, valueKey, labelKey)\n    ? (item as ComplexOptionType)[labelKey!]\n    : item;\n\nexport function sortCollection(array: any[], valueKey?: string): any[] {\n  if (valueKey) {\n    return array.sort((a, b) => (a[valueKey] < b[valueKey] ? -1 : 1));\n  } else {\n    return array.sort((a, b) => (a < b ? -1 : 1));\n  }\n}\n\nexport function arraysEqual(left: any[], right: any[]): boolean {\n  if (left.length !== right.length) return false;\n  const leftLen = left.length;\n  let i = leftLen;\n  while (i) {\n    if (left[i] !== right[i]) return false;\n    i--;\n  }\n  return true;\n}\n\nexport const asArray = (obj: any): any[] => obj || [];\n","function split(str: string): string {\n  let a: number = 1;\n  let res: string = '';\n\n  const parts = (str || '').split('%');\n  const len: number = parts.length;\n\n  if (len > 0) {\n    res += parts[0];\n  }\n\n  for (let i = 1; i < len; i++) {\n    if (parts[i][0] === 's' || parts[i][0] === 'd') {\n      let value = arguments[a++];\n      res += parts[i][0] === 'd' ? Math.floor(value) : value;\n    } else if (parts[i][0]) {\n      res += '%' + parts[i][0];\n    } else {\n      i++;\n      res += '%' + parts[i][0];\n    }\n\n    res += parts[i].substring(1);\n  }\n\n  return res;\n}\n\nconst regex = /%[sdj]/;\n\nexport function format(message: string, ...args: any[]) {\n  if (regex.test(message)) {\n    return split.apply(null, arguments as any);\n  }\n  return Array.from(args).join(' ');\n}\n","import * as React from 'react';\nimport { format } from './lib/format';\nimport { isDataObject } from './lib/utils';\nimport { includes } from './lib/includes';\nimport {\n  OptionsType,\n  OptionType,\n  ComplexOptionType,\n  SimpleOptionType,\n  SelectionState,\n} from './types';\n\nconst isEmptyValue = (value: any) =>\n  value === null ||\n  value === undefined ||\n  (Array.isArray(value) && !value.length);\n\ntype PlaceholderProps = {\n  placeholder?: string;\n  value: OptionsType | OptionType | undefined;\n  numberDisplayed: number;\n  multiple: boolean;\n  valueKey?: string;\n  labelKey?: string;\n  manySelectedPlaceholder?: string;\n  allSelectedPlaceholder?: string;\n  allSelected: SelectionState;\n};\nconst Placeholder: React.FC<PlaceholderProps> = React.memo(\n  ({\n    placeholder,\n    value,\n    numberDisplayed,\n    multiple,\n    valueKey,\n    labelKey,\n    manySelectedPlaceholder,\n    allSelectedPlaceholder,\n    allSelected,\n  }) => {\n    let message: string = '';\n    if (isEmptyValue(value)) {\n      message = placeholder || '';\n    } else {\n      if (Array.isArray(value) && multiple) {\n        // If type is array and values length less than number displayed\n        // join the values\n        if (value.length <= numberDisplayed) {\n          message = value\n            .map(opt => {\n              if (isDataObject(opt, valueKey, labelKey)) {\n                return (opt as ComplexOptionType)[labelKey!];\n              }\n              return opt;\n            })\n            .join(', ');\n        } else {\n          // if many selected and not all selected then use the placeholder\n          if (manySelectedPlaceholder && allSelected !== 'all') {\n            // if it doesn't include the sprintf token then just use the placeholder\n            message = includes(manySelectedPlaceholder, '%s')\n              ? format(manySelectedPlaceholder, value.length)\n              : manySelectedPlaceholder;\n            //If all selected and there is an allselectedplaceholder use that\n          } else if (allSelected && allSelectedPlaceholder) {\n            // if it doesn't include the sprintf token then just use the placeholder\n            message = includes(allSelectedPlaceholder, '%s')\n              ? format(allSelectedPlaceholder, value.length)\n              : allSelectedPlaceholder;\n          }\n        }\n      } else {\n        let tempValue = Array.isArray(value) ? value[0] : value;\n        if (isDataObject(tempValue, valueKey, labelKey)) {\n          message = (tempValue as ComplexOptionType)[labelKey!];\n        } else {\n          message = String(tempValue as SimpleOptionType);\n        }\n      }\n    }\n\n    return (\n      <span\n        className={isEmptyValue(value) ? 'picky__placeholder' : undefined}\n        data-testid=\"picky_placeholder\"\n      >\n        {message}\n      </span>\n    );\n  },\n  areEqual\n);\n\nPlaceholder.defaultProps = {\n  placeholder: 'None selected',\n  allSelectedPlaceholder: '%s selected',\n  manySelectedPlaceholder: '%s selected',\n};\nPlaceholder.displayName = 'Picky(Placeholder)';\n\nfunction areEqual(prevProps: PlaceholderProps, nextProps: PlaceholderProps) {\n  return (\n    prevProps.multiple === nextProps.multiple &&\n    prevProps.value === nextProps.value &&\n    prevProps.numberDisplayed === nextProps.numberDisplayed &&\n    prevProps.allSelected === nextProps.allSelected &&\n    prevProps.allSelectedPlaceholder === nextProps.allSelectedPlaceholder\n  );\n}\nexport { Placeholder };\n","import * as React from 'react';\nexport type FilterProps = {\n  onFilterChange(term: string): void;\n  tabIndex: number | undefined;\n  placeholder?: string;\n} & React.RefAttributes<HTMLInputElement>;\n\nconst Filter: React.FC<FilterProps> = React.forwardRef(\n  (\n    { placeholder, tabIndex, onFilterChange },\n    ref: React.Ref<HTMLInputElement>\n  ) => {\n    return (\n      <div className=\"picky__filter\">\n        <input\n          ref={ref}\n          type=\"text\"\n          className=\"picky__filter__input\"\n          data-testid=\"picky__filter__input\"\n          placeholder={placeholder}\n          tabIndex={tabIndex}\n          aria-label=\"filter options\"\n          onChange={e => onFilterChange(e.target.value)}\n        />\n      </div>\n    );\n  }\n);\n\nFilter.defaultProps = {\n  placeholder: 'Filter...',\n};\n\nFilter.displayName = 'Picky(Filter)';\n\nexport { Filter };\n","import * as React from 'react';\nimport { isDataObject } from './lib/utils';\nimport { OptionType, ComplexOptionType } from './types';\n\ntype OptionProps = {\n  isSelected: boolean;\n  valueKey?: string;\n  labelKey?: string;\n  id: string;\n  item: OptionType;\n  style?: React.CSSProperties;\n  selectValue(option: OptionType): void;\n  multiple: boolean;\n  tabIndex: number | undefined;\n  disabled: boolean;\n};\nconst Option: React.FC<OptionProps> = React.memo(\n  ({\n    id,\n    item,\n    isSelected,\n    labelKey,\n    valueKey,\n    selectValue,\n    style,\n    multiple,\n    tabIndex,\n    disabled,\n  }) => {\n    const cssClass = isSelected ? 'option selected' : 'option';\n    const body = isDataObject(item, labelKey, valueKey)\n      ? (item as ComplexOptionType)[labelKey!]\n      : item;\n    const inputType = multiple ? 'checkbox' : 'radio';\n    const select = () => !disabled && selectValue(item);\n\n    return (\n      <div\n        tabIndex={tabIndex}\n        id={id}\n        role=\"option\"\n        style={style}\n        data-testid=\"option\"\n        data-selected={isSelected ? 'selected' : ''}\n        aria-selected={isSelected}\n        className={cssClass}\n        onClick={select}\n        onKeyPress={e => {\n          e.preventDefault();\n          if (!disabled) {\n            selectValue(item);\n          }\n        }}\n      >\n        <input\n          type={inputType}\n          readOnly\n          tabIndex={-1}\n          disabled={disabled}\n          checked={isSelected}\n          aria-label={body}\n          data-testid={'option-checkbox'}\n        />\n        {body}\n      </div>\n    );\n  },\n  areEqual\n);\n\nOption.displayName = 'Picky(Option)';\n\nfunction areEqual(prevProps: OptionProps, nextProps: OptionProps) {\n  return (\n    prevProps.multiple === nextProps.multiple &&\n    prevProps.isSelected === nextProps.isSelected &&\n    prevProps.id === nextProps.id &&\n    prevProps.item === nextProps.item &&\n    prevProps.tabIndex === nextProps.tabIndex &&\n    prevProps.disabled === nextProps.disabled\n  );\n}\nexport { Option };\n","import * as React from 'react';\nimport { SelectionState } from './types';\n\ntype SelectAllProps = {\n  tabIndex: number | undefined;\n  disabled: boolean;\n  allSelected: SelectionState;\n  id: string;\n  selectAllText?: string;\n  toggleSelectAll(): void;\n  visible: boolean;\n};\nconst SelectAll: React.FC<SelectAllProps> = React.memo(\n  ({\n    tabIndex,\n    disabled,\n    allSelected,\n    id,\n    selectAllText,\n    toggleSelectAll,\n    visible,\n  }) => {\n    const checkboxRef = React.createRef<HTMLInputElement>();\n    if (!visible) {\n      return null;\n    }\n\n    React.useEffect(() => {\n      if (checkboxRef.current === null) return;\n      checkboxRef.current.indeterminate = allSelected === 'partial';\n    }, [allSelected]);\n    return (\n      <div\n        tabIndex={tabIndex}\n        role=\"option\"\n        data-testid=\"selectall\"\n        id={id + '-option-' + 'selectall'}\n        data-selectall=\"true\"\n        aria-selected={allSelected === 'all'}\n        className={allSelected === 'all' ? 'option selected' : 'option'}\n        onClick={toggleSelectAll}\n        onKeyPress={toggleSelectAll}\n      >\n        <input\n          type=\"checkbox\"\n          ref={checkboxRef}\n          readOnly\n          data-testid=\"selectall-checkbox\"\n          tabIndex={-1}\n          checked={allSelected === 'all'}\n          aria-label=\"select all\"\n          disabled={disabled}\n        />\n        <span data-testid=\"select-all-text\">{selectAllText}</span>\n      </div>\n    );\n  },\n  areEqual\n);\n\nSelectAll.displayName = 'Picky(SelectAll)';\n\nfunction areEqual(prevProps: SelectAllProps, nextProps: SelectAllProps) {\n  return (\n    prevProps.tabIndex === nextProps.tabIndex &&\n    prevProps.disabled === nextProps.disabled &&\n    prevProps.allSelected === nextProps.allSelected &&\n    prevProps.selectAllText === nextProps.selectAllText &&\n    prevProps.visible === nextProps.visible\n  );\n}\nexport { SelectAll };\n","import * as React from 'react';\n\ntype ButtonProps = {} & React.DetailedHTMLProps<\n  React.ButtonHTMLAttributes<HTMLButtonElement>,\n  HTMLButtonElement\n>;\nconst Button: React.FC<ButtonProps> = ({\n  id,\n  disabled,\n  onClick,\n  children,\n  className,\n  ...rest\n}) => {\n  const buttonId = `${id}__button`;\n  const classes = [\n    'picky__input',\n    disabled ? 'picky__input--disabled' : '',\n    className,\n  ].join(' ');\n\n  return (\n    <button\n      id={buttonId}\n      type=\"button\"\n      className={classes}\n      onClick={onClick}\n      data-testid=\"picky-input\"\n      disabled={disabled}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n\nButton.displayName = 'Picky(Button)';\nexport { Button };\n","import * as React from 'react';\nimport { debounce } from './lib/debounce';\nimport { includes } from './lib/includes';\nimport {\n  isDataObject,\n  hasItem,\n  keyExtractor,\n  hasItemIndex,\n  sortCollection,\n  arraysEqual,\n  asArray,\n} from './lib/utils';\nimport { Placeholder } from './Placeholder';\nimport { Filter } from './Filter';\nimport { Option } from './Option';\nimport './Picky.css';\nimport { SelectAll } from './SelectAll';\nimport { Button } from './Button';\nimport {\n  RenderListProps,\n  SelectAllMode,\n  RenderSelectAllProps,\n  RenderProps,\n  OptionsType,\n  OptionType,\n  ComplexOptionType,\n  SelectionState,\n} from './types';\n\ntype PickyState = {\n  selectedValue: OptionsType | OptionType | null;\n  open?: boolean;\n  filtered?: boolean;\n  filteredOptions: OptionsType;\n  allSelected: SelectionState;\n};\n\nexport type PickyProps = {\n  /**\n   * The ID for the component, used for accessibility\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  id: string;\n  /**\n   * Default placeholder text\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  placeholder?: string;\n\n  /**\n   * The value of the Picky.\n   * Picky is a controlled component so use this in conjunction with onChange and update the value accordingly\n   *\n   * @type {PickyValue}\n   * @memberof PickyProps\n   */\n  value?: OptionsType | OptionType;\n\n  /**\n   * The number of items to be displayed before the placeholder turns to \"5 selected\"\n   *\n   * @type {number} [3]\n   * @memberof PickyProps\n   */\n  numberDisplayed?: number;\n\n  /**\n   * True if multiple options can be selected\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  multiple?: boolean;\n\n  /**\n   * Options for the Picky component either [1, 2, 3] or [{label: \"1\", value: 1}] in conjunction with valueKey and labelKey props\n   *\n   * @type {any[]} [[]]\n   * @memberof PickyProps\n   */\n  options: any[];\n\n  /**\n   * Called when the selected value changes, use this to re-set the value prop\n   *\n   * @memberof PickyProps\n   */\n  onChange: (value: OptionsType | OptionType) => any;\n\n  /**\n   * Used to control whether the Picky is open by default\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  open?: boolean;\n\n  /**\n   * True if you want a select all option at the top of the dropdown.\n   * Won't appear if multiple is false\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  includeSelectAll?: boolean;\n\n  /**\n   * True if you want a filter input at the top of the dropdown, used to filter items.\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  includeFilter?: boolean;\n\n  /**\n   * Used to debounce onFilterChange events. Set value to zero to disable debounce. Duration is in milliseconds.\n   *\n   * @type {number} [300]\n   * @memberof PickyProps\n   */\n  filterDebounce?: number;\n\n  /**\n   * The max height of the dropdown, height is in px.\n   *\n   * @type {number} [300]\n   * @memberof PickyProps\n   */\n  dropdownHeight?: number;\n\n  /**\n   * Callback when options have been filtered.\n   *\n   * @memberof PickyProps\n   */\n  onFiltered?: (filteredOptions: any[]) => any;\n\n  /**\n   * Called when dropdown is opened\n   *\n   * @memberof PickyProps\n   */\n  onOpen?: () => any;\n\n  /**\n   * Called when dropdown is closed\n   *\n   * @memberof PickyProps\n   */\n  onClose?: () => any;\n\n  /**\n   *  Indicates which key is the value in an object. Used when supplied options are objects.\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  valueKey?: string;\n  /**\n   *  Indicates which key is the label in an object. Used when supplied options are objects.\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  labelKey?: string;\n\n  /**\n   * Render prop for individual options\n   *\n   * @memberof PickyProps\n   */\n  render?: (props: RenderProps) => any;\n\n  /**\n   * Tab index for accessibility\n   *\n   * @type {PickyTabIndex} [0]\n   * @memberof PickyProps\n   */\n  tabIndex?: number | undefined;\n\n  /**\n   * True if the dropdown should be permanently open.\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  keepOpen?: boolean;\n\n  /**\n   * The placeholder when the number of items are higher than {numberDisplayed} and all aren't selected.\n   * Default \"%s selected\" where %s is the number of items selected.\n   *\n   * @type {string} [\"%s selected\"]\n   * @memberof PickyProps\n   */\n  manySelectedPlaceholder?: string;\n\n  /**\n   * Default \"%s selected\" where %s is the number of items selected. This gets used when all options are selected.\n   *\n   * @type {string} [\"%s selected\"]\n   * @memberof PickyProps\n   */\n  allSelectedPlaceholder?: string;\n\n  /**\n   * Default select all text\n   *\n   * @type {string} [\"Select all\"]\n   * @memberof PickyProps\n   */\n  selectAllText?: string;\n\n  /**\n   * Render prop for rendering a custom select all component\n   *\n   * @memberof PickyProps\n   */\n  renderSelectAll?: (props: RenderSelectAllProps) => any;\n\n  /**\n   * If set to true, will focus the filter by default when opened.\n   *\n   * @type {boolean}\n   * @memberof PickyProps\n   */\n  defaultFocusFilter?: boolean;\n\n  /**\n   * Used to supply a class to the root picky component. Helps when using Picky with a CSS-in-JS library like styled-components\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  className?: string;\n\n  /**\n   * Render prop for whole list, you can use this to add virtualization/windowing if necessary.\n   *\n   * @memberof PickyProps\n   */\n  renderList?: (props: RenderListProps) => any;\n\n  /**\n   * Override the placeholder of the filter\n   *\n   * @type {string}\n   * @memberof PickyProps\n   */\n  filterPlaceholder?: string;\n  /**\n   * Will provide the input value of filter to the picky dropdown, so that if we have a larger list of options then we can only supply the matching options based on this value.\n   */\n  getFilterValue?: (term: string) => any;\n  /**\n   *  If true options will be returned when they match case, defaults to false\n   */\n  caseSensitiveFilter?: boolean;\n\n  /**\n   * Pass additional props the the button component\n   *\n   * @type {React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>}\n   * @memberof PickyProps\n   */\n  buttonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >;\n\n  /**\n   * True if you want a disabled Picky\n   */\n  disabled?: boolean;\n\n  /**\n   * Allows for additional functionalty with select all and filtering, see the docs.\n   */\n  selectAllMode?: SelectAllMode;\n  /**\n   * When true the filter input will be cleared when the dropdown is closed\n   *\n   * @type {boolean}\n   */\n  clearFilterOnClose?: boolean;\n  /**\n   * A string function which takes the filter term and returns a new filter term.\n   *\n   * Useful for trimming the filter term.\n   *\n   * @type {StringFunc}\n   */\n  filterTermProcessor?: (term: string) => string;\n};\n\nclass Picky extends React.PureComponent<PickyProps, PickyState> {\n  static defaultProps = {\n    id: 'picky',\n    numberDisplayed: 3,\n    options: [],\n    filterDebounce: 150,\n    dropdownHeight: 300,\n    onChange: () => {},\n    tabIndex: 0,\n    keepOpen: true,\n    selectAllText: 'Select all',\n    selectAllMode: 'default',\n    filterTermProcessor: (term: string) => term,\n  };\n  node: HTMLDivElement | null = null;\n  filter: HTMLInputElement | null = null;\n  constructor(props: PickyProps) {\n    super(props);\n    this.state = {\n      selectedValue: props.value || (props.multiple ? [] : null),\n      open: props.open,\n      filtered: false,\n      filteredOptions: [],\n      allSelected: 'none',\n    };\n    this.toggleDropDown = this.toggleDropDown.bind(this);\n    this.toggleSelectAll = this.toggleSelectAll.bind(this);\n    this.onFilterChange = this.onFilterChange.bind(this);\n    this.selectValue = this.selectValue.bind(this);\n    this.allSelected = this.allSelected.bind(this);\n    this.handleOutsideClick = this.handleOutsideClick.bind(this);\n    this.isItemSelected = this.isItemSelected.bind(this);\n    this.focusFilterInput = this.focusFilterInput.bind(this);\n    this.getValue = this.getValue.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      allSelected: this.allSelected(),\n    });\n    this.focusFilterInput(!!this.state.open);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleOutsideClick, false);\n  }\n\n  componentDidUpdate(prevProps: PickyProps) {\n    if (\n      this.props.options !== prevProps.options ||\n      this.props.value !== prevProps.value\n    ) {\n      if (!this.props.multiple) return;\n      let valuesEqual = Array.isArray(prevProps.value)\n        ? arraysEqual(prevProps.value, this.props.value as OptionsType)\n        : prevProps.value === this.props.value;\n\n      let optsEqual = arraysEqual(prevProps.options, this.props.options);\n      const currentOptions = this.state.filtered\n        ? this.state.filteredOptions\n        : this.props.options;\n      const currentValues = this.state.filtered\n        ? this.state.filteredOptions.filter(value => {\n            if (Array.isArray(this.props.value)) {\n              return this.props.value.includes(value);\n            }\n            return true;\n          })\n        : this.props.value;\n      this.setState({\n        allSelected: !(valuesEqual && optsEqual)\n          ? this.allSelected(currentValues as OptionsType, currentOptions)\n          : this.allSelected(),\n      });\n    }\n  }\n\n  selectValue(val: string | number) {\n    const valueLookup = this.props.value;\n    if (this.props.multiple && Array.isArray(valueLookup)) {\n      const itemIndex = hasItemIndex(\n        valueLookup,\n        val,\n        this.props.valueKey,\n        this.props.labelKey\n      );\n\n      let selectedValue: OptionsType = [];\n      if (itemIndex > -1) {\n        selectedValue = [\n          ...valueLookup.slice(0, itemIndex),\n          ...valueLookup.slice(itemIndex + 1),\n        ];\n      } else {\n        selectedValue = [...(this.props.value as OptionsType), val];\n      }\n      this.setState(\n        {\n          allSelected: this.allSelected(selectedValue),\n        },\n        () => {\n          this.props.onChange(selectedValue);\n        }\n      );\n    } else {\n      this.props.onChange(val);\n    }\n  }\n  /**\n   * Get the value of a given option or value safely\n   *\n   * @param {*} option\n   * @returns\n   * @memberof Picky\n   */\n  getValue(option: OptionType) {\n    return typeof this.props.valueKey !== 'undefined'\n      ? (option as ComplexOptionType)[this.props.valueKey]\n      : option;\n  }\n  /**\n   * Determine whether all items are selected\n   *\n   * @returns {Boolean}\n   * @memberof Picky\n   */\n  allSelected(\n    overrideSelected?: any[],\n    overrideOptions?: any[]\n  ): SelectionState {\n    const { value, options } = this.props;\n    const selectedValue = overrideSelected || value;\n    const selectedOptions = overrideOptions || options;\n\n    // If there are no options we are getting a false positive for all items being selected\n    if (selectedOptions && selectedOptions.length === 0) {\n      return 'none';\n    }\n    let copiedOptions = selectedOptions.map(this.getValue);\n    let copiedValues = Array.isArray(selectedValue)\n      ? selectedValue.map(this.getValue)\n      : [];\n\n    const areEqual = arraysEqual(\n      sortCollection(copiedValues),\n      sortCollection(copiedOptions)\n    );\n    if (areEqual) {\n      return 'all';\n    } else if (copiedValues.length > 0) {\n      return 'partial';\n    } else {\n      return 'none';\n    }\n  }\n  /**\n   * Toggles select all\n   *\n   * @memberof Picky\n   */\n  toggleSelectAll() {\n    if (this.props.disabled) return;\n    this.setState(\n      state => {\n        return {\n          ...state,\n          allSelected: this.state.allSelected === 'all' ? 'none' : 'all',\n        };\n      },\n      () => {\n        if (this.state.allSelected !== 'all') {\n          if (this.state.filtered) {\n            const diff = asArray(this.props.value).filter(\n              item => !this.state.filteredOptions.includes(item)\n            );\n            this.props.onChange(diff);\n          } else {\n            this.props.onChange([]);\n          }\n        } else {\n          if (this.state.filtered) {\n            let newValues = [\n              ...(this.props.value as any[]),\n              ...this.state.filteredOptions,\n            ];\n            this.props.onChange(newValues);\n          } else {\n            this.props.onChange(this.props.options);\n          }\n        }\n      }\n    );\n  }\n\n  isItemSelected(item: OptionType): boolean {\n    return hasItem(\n      this.props.value,\n      item,\n      this.props.valueKey,\n      this.props.labelKey\n    ) as boolean;\n  }\n\n  renderOptions() {\n    const items = this.state.filtered\n      ? this.state.filteredOptions\n      : this.props.options;\n\n    const {\n      labelKey,\n      valueKey,\n      multiple,\n      render,\n      tabIndex,\n      renderList,\n      disabled,\n    } = this.props;\n    if (renderList) {\n      return renderList({\n        items,\n        selected: this.props.value,\n        multiple,\n        tabIndex,\n        getIsSelected: this.isItemSelected,\n        selectValue: this.selectValue,\n        disabled,\n      });\n    }\n    return items.map((item, index) => {\n      // Create a key based on the options value\n      const key = keyExtractor(item, valueKey, labelKey);\n\n      const isSelected = this.isItemSelected(item);\n      // If render prop supplied for items call that.\n      if (typeof render === 'function') {\n        return render({\n          index,\n          item,\n          isSelected,\n          selectValue: this.selectValue,\n          labelKey: labelKey,\n          valueKey: valueKey,\n          multiple: multiple,\n          disabled,\n        });\n      } else {\n        // Render a simple option\n        return (\n          <Option\n            key={key}\n            item={item}\n            isSelected={isSelected}\n            selectValue={this.selectValue}\n            labelKey={labelKey}\n            valueKey={valueKey}\n            multiple={Boolean(multiple)}\n            tabIndex={tabIndex}\n            disabled={Boolean(disabled)}\n            id={this.props.id + '-option-' + index}\n          />\n        );\n      }\n    });\n  }\n  /**\n   * Called when Filter term changes. Sets filteredOptions and filtered state.\n   *\n   * @param {any} term\n   * @returns\n   * @memberof Picky\n   */\n  onFilterChange(term: string) {\n    const processedTerm =\n      typeof this.props.filterTermProcessor === 'function'\n        ? this.props.filterTermProcessor(term)\n        : term;\n\n    /**\n     * getFilterValue function will provide the input value of filter to the picky dropdown, so that if we have a larger list of options then we can only supply the matching options based on this value\n     */\n    if (this.props.getFilterValue) {\n      this.props.getFilterValue(processedTerm);\n    }\n    if (!processedTerm.trim()) {\n      return this.setState({\n        filtered: false,\n        filteredOptions: [],\n        allSelected: asArray(this.props.value).length > 0 ? 'partial' : 'none',\n      });\n    }\n    const isObject = isDataObject(\n      this.props.options && this.props.options[0],\n      this.props.valueKey,\n      this.props.labelKey\n    );\n    const filteredOptions = this.props.options.filter(option => {\n      if (isObject) {\n        return includes(\n          option[this.props.labelKey!],\n          processedTerm,\n          !!this.props.caseSensitiveFilter\n        );\n      }\n      return includes(option, processedTerm, this.props.caseSensitiveFilter);\n    });\n    this.setState(\n      {\n        filtered: true,\n        filteredOptions,\n      },\n      () => {\n        if (this.props.onFiltered) {\n          this.props.onFiltered(filteredOptions);\n        }\n      }\n    );\n  }\n  /**\n   *\n   * Called by a click event listener. Used to determine any clicks that occur outside of the component.\n   * @param {MouseEvent} e\n   * @returns\n   * @memberof Picky\n   */\n  handleOutsideClick(e: any) {\n    // If keep open then don't toggle dropdown\n    // If radio and not keepOpen then auto close it on selecting a value\n    // If radio and click to the filter input then don't toggle dropdown\n    const keepOpen = this.props.keepOpen || this.props.multiple;\n    if (this.node && this.node.contains(e.target) && keepOpen) {\n      return;\n    }\n    if (this.filter && this.filter.contains(e.target)) {\n      return;\n    }\n    this.toggleDropDown();\n  }\n\n  focusFilterInput(isOpen: boolean) {\n    if (!this.filter) return;\n    if (isOpen && this.props.defaultFocusFilter) {\n      this.filter.focus();\n    }\n    if (!isOpen && this.props.clearFilterOnClose === true) {\n      this.filter.value = '';\n    }\n  }\n  /**\n   * Toggle state of dropdown\n   *\n   * @memberof Picky\n   */\n  toggleDropDown() {\n    if (!this.state.open) {\n      // Add event listener to listen for clicks to determine if click occured outside the component or not\n      document.addEventListener('click', this.handleOutsideClick, false);\n    } else {\n      // Remove\n      document.removeEventListener('click', this.handleOutsideClick, false);\n    }\n\n    this.setState(\n      state => {\n        return {\n          ...state,\n          // Toggle open state\n          open: !state.open,\n          filtered: this.props.clearFilterOnClose ? false : state.filtered,\n          filteredOptions: this.props.clearFilterOnClose\n            ? []\n            : state.filteredOptions,\n        };\n      },\n      () => {\n        const isOpen = !!this.state.open;\n        // Prop callbacks\n        this.focusFilterInput(isOpen);\n        if (isOpen && this.props.onOpen) {\n          this.props.onOpen();\n        } else if (!isOpen && this.props.onClose) {\n          this.props.onClose();\n        }\n      }\n    );\n  }\n\n  get filterDebounce() {\n    const { filterDebounce } = this.props;\n    const amount = filterDebounce || 0;\n    return (amount || 0) > 0\n      ? debounce(this.onFilterChange, amount)\n      : this.onFilterChange;\n  }\n\n  get showSelectAll(): boolean {\n    const { renderSelectAll, multiple, includeSelectAll } = this.props;\n    return Boolean(\n      !renderSelectAll &&\n        includeSelectAll &&\n        multiple &&\n        ((this.props.selectAllMode === 'default' && !this.state.filtered) ||\n          this.props.selectAllMode === 'filtered')\n    );\n  }\n  render() {\n    const {\n      className,\n      placeholder,\n      value,\n      multiple,\n      numberDisplayed,\n      includeFilter,\n      valueKey,\n      labelKey,\n      tabIndex,\n      dropdownHeight,\n      renderSelectAll,\n      filterPlaceholder,\n      disabled,\n      buttonProps,\n    } = this.props;\n    const { open } = this.state;\n    let ariaOwns = '';\n    if (open) {\n      ariaOwns += this.props.id + '-list';\n    }\n    const buttonId = `${this.props.id}__button`;\n    const dropdownStyle: React.CSSProperties = {\n      maxHeight: dropdownHeight,\n      overflowY: 'scroll',\n    };\n    return (\n      <div\n        ref={node => {\n          this.node = node;\n        }}\n        className={['picky', className].join(' ')}\n        id={this.props.id}\n        role=\"combobox\"\n        aria-controls={buttonId}\n        aria-expanded={open}\n        aria-haspopup={open}\n        aria-owns={ariaOwns}\n        tabIndex={tabIndex}\n      >\n        <Button\n          id={`${this.props.id}__button`}\n          disabled={disabled}\n          onClick={this.toggleDropDown}\n          {...buttonProps}\n        >\n          <Placeholder\n            allSelected={this.state.allSelected}\n            placeholder={placeholder}\n            manySelectedPlaceholder={this.props.manySelectedPlaceholder}\n            allSelectedPlaceholder={this.props.allSelectedPlaceholder}\n            value={value}\n            multiple={Boolean(multiple)}\n            numberDisplayed={numberDisplayed!}\n            valueKey={valueKey}\n            labelKey={labelKey}\n            data-testid=\"placeholder-component\"\n          />\n        </Button>\n        <div\n          className=\"picky__dropdown\"\n          id={this.props.id + '-list'}\n          aria-hidden={!open}\n          hidden={!open}\n          style={open ? dropdownStyle : { visibility: 'hidden' }}\n        >\n          {includeFilter && (\n            <Filter\n              tabIndex={tabIndex}\n              ref={filter => (this.filter = filter)}\n              placeholder={filterPlaceholder}\n              onFilterChange={this.filterDebounce}\n            />\n          )}\n          {renderSelectAll ? (\n            renderSelectAll({\n              filtered: Boolean(this.state.filtered),\n              allSelected: this.state.allSelected,\n              toggleSelectAll: this.toggleSelectAll,\n              tabIndex,\n              multiple: Boolean(multiple),\n              disabled: Boolean(disabled),\n            })\n          ) : (\n            <SelectAll\n              visible={this.showSelectAll}\n              tabIndex={tabIndex}\n              disabled={!!disabled}\n              allSelected={this.state.allSelected}\n              id={this.props.id}\n              selectAllText={this.props.selectAllText}\n              toggleSelectAll={this.toggleSelectAll}\n            />\n          )}\n          {open && <div data-testid=\"dropdown\">{this.renderOptions()}</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport { Picky };\n"],"names":["debounce","fn","delay","timeoutID","args","clearTimeout","that","setTimeout","apply","includes","str","term","caseSensitive","String","toLowerCase","indexOf","isDataObject","obj","valueKey","labelKey","hasOwnProperty","hasItem","all","item","returnIndex","Array","isArray","find","findIndex","opt","indexOfItem","hasItemIndex","keyExtractor","sortCollection","array","sort","a","b","arraysEqual","left","right","length","leftLen","i","asArray","split","res","parts","len","value","arguments","Math","floor","substring","regex","format","message","test","from","join","isEmptyValue","undefined","Placeholder","React","placeholder","numberDisplayed","multiple","manySelectedPlaceholder","allSelectedPlaceholder","allSelected","map","tempValue","className","areEqual","defaultProps","displayName","prevProps","nextProps","Filter","ref","tabIndex","onFilterChange","type","onChange","e","target","Option","id","isSelected","selectValue","style","disabled","cssClass","body","inputType","select","role","onClick","onKeyPress","preventDefault","readOnly","checked","SelectAll","selectAllText","toggleSelectAll","visible","checkboxRef","current","indeterminate","Button","children","rest","buttonId","classes","Picky","props","state","selectedValue","open","filtered","filteredOptions","toggleDropDown","bind","handleOutsideClick","isItemSelected","focusFilterInput","getValue","componentDidMount","setState","componentWillUnmount","document","removeEventListener","componentDidUpdate","options","valuesEqual","optsEqual","currentOptions","currentValues","filter","val","valueLookup","itemIndex","slice","option","overrideSelected","overrideOptions","selectedOptions","copiedOptions","copiedValues","diff","newValues","renderOptions","items","render","renderList","selected","getIsSelected","index","key","Boolean","processedTerm","filterTermProcessor","getFilterValue","trim","isObject","caseSensitiveFilter","onFiltered","keepOpen","node","contains","isOpen","defaultFocusFilter","focus","clearFilterOnClose","addEventListener","onOpen","onClose","includeFilter","dropdownHeight","renderSelectAll","filterPlaceholder","buttonProps","ariaOwns","dropdownStyle","maxHeight","overflowY","hidden","visibility","filterDebounce","showSelectAll","amount","includeSelectAll","selectAllMode"],"mappings":"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"}