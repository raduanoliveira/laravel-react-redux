import t,{Fragment as n,createElement as i,Children as s,PureComponent as e}from"react";const r=()=>{},o=n?t=>t?t.length>1?i(n,null,...t):s.only(t):null:s.only;class u extends e{constructor(...t){super(...t),this.t=!1,this.i=null,this.s=r}componentWillUnmount(){this.s()}o(t){t!==this.i&&(this.s(),this.i=null,t&&(this.i=t,this.s=t.on("updated",()=>this.forceUpdate())))}get allowed(){return this.t}u(){const t=this.props,n=t.of||t.a||t.an||t.this||t.on,i=t.not?"cannot":"can";return t.ability[i](t.I||t.do,n,t.field)}render(){return this.o(this.props.ability),this.t=this.u(),this.props.passThrough||this.t?this.l():null}l(){const{children:t,ability:n}=this.props,i="function"==typeof t?t(this.t,n):t;return o(i)}}function c(t){var n,i;return i=n=class extends u{},n.defaultProps={ability:t},i}function l(t){return n=>i(t,null,t=>i(u,Object.assign({ability:t},n)))}function h(n){if("production"!==process.env.NODE_ENV&&"function"!=typeof t.useContext)throw new Error("You must use React >= 16.8 in order to use useAbility()");const i=t.useContext(n),[s,e]=t.useState();return t.useEffect(()=>i.on("updated",t=>{t.rules!==s&&e(t.rules)}),[]),i}export{u as Can,c as createCanBoundTo,l as createContextualCan,h as useAbility};
//# sourceMappingURL=index.js.map
